{"version":3,"sources":["components/ShowMeasures.jsx","About.jsx","utils/constants.js"],"names":["ContainerAll","styled","div","_templateObject","props","show","CloseDiv","_templateObject2","ContainerMeasures","_templateObject3","Header","_templateObject4","Button","button","_templateObject5","color","propTypes","PropTypes","string","GraphButton","_ref","onClick","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","style","display","textAlign","alignItems","ShowMeasures","_ref2","station","change","showGraphs","name","filter","p","map","key","UNITS","window","scrollTo","top","document","body","scrollHeight","behavior","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_SwissApp_jsx__WEBPACK_IMPORTED_MODULE_2__","_components_NavBar_jsx__WEBPACK_IMPORTED_MODULE_3__","_components_ShowMeasures_jsx__WEBPACK_IMPORTED_MODULE_4__","styles","container","margin","flexDirection","width","lineHeight","header","fontWeight","fontSize","marginTop","title","flex","parag","withRouter","history","Fragment","alwaysDisplay","fixed","notHome","href","push","d","COLOR_MAP","PARAMS","PARAMS_W_ALT","PRETTY_PARAMS","TIME_PARAMS","URL","jet","require","coolwarm","plasma","temperature","pressure_altitude","pressure_qnh","humidity","wind_mean_speed","wind_max_speed","rain","altitude","value","label","concat"],"mappings":"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","file":"static/js/2.6a128019.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\n\nimport { UNITS } from '../utils/constants';\n\nconst ContainerAll = styled.div`\n  position: absolute;\n  bottom: 15px;\n  right: 5px;\n  z-index: 10000;\n  background-color: hsla(0, 0%, 99%, 90%);\n  color: hsl(0, 0%, 20%);\n  box-shadow: 0px 1px 5px hsl(0, 0%, 50%);\n  border-radius: 5px;\n  opacity: ${props => (props.show ? 1 : 0)};\n  transform: ${props => (props.show ? \"scale(1)\" : \"scale(0)\")};\n  transition: 0.2s;\n  padding: 5px 10px;\n  font-size: 16px;\n  pointer-events: none;\n`;\n\nconst CloseDiv = styled.div`\n  position: absolute;\n  font-size: 20px;\n  top: 2px;\n  right: 5px;\n  pointer-events: auto;\n  transition: 0.2s;\n  :after {\n    display: inline-block;\n    content: \"\\00d7\"; /* This will render the 'X' */\n  }\n  :hover {\n    color: red;\n  }\n`;\n\nconst ContainerMeasures = styled.div`\n  margin: 10px 0px;\n`;\n\nconst Header = styled.div`\n  font-size: 18px;\n  font-weight: 600;\n  color: hsl(0, 0%, 10%);\n  margin-right: 8px;\n`;\n\nconst Button = styled.button`\n  margin: -5px auto 5px;\n  font-size: 16px;\n  padding: 5px 10px;\n  background-color: white;\n  font-weight: 500;\n  pointer-events: auto;\n  border: 2px solid ${props => props.color || 'hsl(200, 100%, 50%)'};\n  border-radius: 5px;\n  box-shadow: 0px 5px 5px hsla(0, 0%, 0%, 0.1);\n  :hover {\n    background-color: ${props => props.color || 'hsl(200, 100%, 50%)'};\n    color: white;\n  }\n  transition: 0.2s;\n`;\nButton.propTypes = {\n  color: PropTypes.string\n}\n\nconst GraphButton = ({ onClick }) => (\n  <div style={{ display: \"flex\", textAlign: \"center\", alignItems: \"center\" }}>\n    <Button onClick={onClick}>Graphs</Button>\n  </div>\n);\n\nconst ShowMeasures = ({ station, change, showGraphs }) => {\n  let show = station.name;\n\n  const parameters = [\n    [\"altitude\", \"Altitude\"],\n    [\"temperature\", \"Temperature\"],\n    [\"pressure_altitude\", \"Pressure at station\"],\n    [\"pressure_qnh\", \"Adjusted pressure\"],\n    [\"wind_mean_speed\", \"Mean wind speed\"],\n    [\"wind_max_speed\", \"Max wind speed\"],\n    [\"humidity\", \"Humidity\"],\n    [\"rain\", \"Precipitation\"]\n  ];\n\n  return (\n    <ContainerAll show={show}>\n      <CloseDiv onClick={() => {change(\"clickedStation\", {});change(\"showGraphs\", false);}} />\n      <Header>{station.name}</Header>\n      {parameters\n        .filter(p => station[p[0]] !== null)\n        .map(p => (\n          <ContainerMeasures key={p[0]}>\n            <div>{p[1]}</div>\n            <div>\n              {station[p[0]]} {UNITS[p[0]]}\n            </div>\n          </ContainerMeasures>\n        ))}\n\n      {show && <GraphButton onClick={() => {\n        if (showGraphs) {\n          window.scrollTo({ top: document.body.scrollHeight, behavior: \"smooth\" });\n        } else {\n          change(\"showGraphs\", true);}\n      }} /> }\n    </ContainerAll>\n  );\n};\n\nexport { Button };\nexport default ShowMeasures;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport { GlobalStyles } from \"./SwissApp.jsx\";\nimport NavBar from './components/NavBar.jsx';\nimport { Button } from './components/ShowMeasures.jsx';\n\nconst styles = {\n  container: {\n    margin: '20px auto',\n    display: 'flex',\n    flexDirection: 'column',\n    width: '60vw',\n    lineHeight: 1.5\n  },\n  header: {\n    fontWeight: 600,\n    fontSize: '24px',\n    marginTop:'20px'\n  },\n  title: {\n    flex:'1',\n    fontWeight:700,\n    fontSize: '30px', \n    textAlign:'center',\n    color:'hsl(200,100%,50%)'\n  },\n  parag: {\n    flex: '1',\n    fontSize: '20px',\n    textAlign: 'justify'\n   },\n  button: {\n    flex: '0',\n    fontSize: '20px',\n    margin: '20px auto 0px',\n  }\n}\n\nconst About = ({history}) => (\n  <>\n  <GlobalStyles />\n  <NavBar alwaysDisplay fixed='static' notHome />\n  <div style={styles.container}>\n    <div style={styles.title}>About the DATECO demo</div>\n    <div style={styles.header}>Data</div>\n    <div style={styles.parag}>\n      The data comes from our own stations and those of the official automatic monitoring network of MeteoSwiss.\n      It is updated at least every 10 minutes.\n      The MeteoSwiss network data as well as the altitude data is gotten through <a href='http://www.opendata.swiss'>opendata.swiss</a>.\n    </div>\n    <div style={styles.header}>Next steps</div>\n    <div style={styles.parag}>\n      <ul>\n        <li>We are deploying more of our own stations to get a finer mesh of the country.</li>\n        <li>We are expanding the platform to neighboring countries.</li>\n        <li>We are integrating forecasts to the platform.</li>\n      </ul>\n    </div>\n    <div style={styles.header}>Feedback</div>\n    <div style={styles.parag}>\n      Please send us any feedback at info@dat.eco.\n    </div>\n    <div style={styles.button}>\n      <Button onClick={()=>history.push('/demo')}>\n        Back to Demo\n      </Button>\n    </div>\n  </div>\n  </>\n);\n\nexport default withRouter(About);","const COLOR_MAP = {\n  jet: require('../data/jetcolormap.json'),\n  coolwarm: require('../data/coolwarmcolormap.json'),\n  plasma: require('../data/plasmacolormap.json'),\n}\n\nconst UNITS = {\n  'temperature': '°C',\n  'pressure_altitude': 'hPa',\n  'pressure_qnh': 'hPa',\n  'humidity': '%',\n  'wind_mean_speed': 'km/h',\n  'wind_max_speed': 'km/h',\n  'rain': 'mm',\n  'altitude': 'm'\n}\n\nconst PARAMS = [\n  {value:'temperature', label: 'Temperature'},\n  {value:'pressure_altitude', label: 'Pressure'},\n  {value:'pressure_qnh', label: 'Adjusted Pressure'},\n  {value:'humidity', label: 'Humidity'},\n  {value:'wind_mean_speed', label: 'Mean wind speed'},\n  {value:'wind_max_speed', label: 'Maximum wind speed'},\n  {value:'rain', label: 'Precipitation'},\n]\n\nconst PARAMS_W_ALT = [...PARAMS, {value:'altitude', label: 'Altitude'}];\n\nconst PRETTY_PARAMS = {\n  temperature: 'Temperature',\n  pressure_altitude: 'Pressure',\n  pressure_qnh: 'Adjusted Pressure',\n  humidity: 'Humidity',\n  wind_mean_speed: 'Mean wind speed',\n  wind_max_speed: 'Maximum wind speed',\n  rain: 'Precipitation',\n  altitude: 'Altitude',\n}\n\nconst TIME_PARAMS = [\n  {value: '3600', label: 'Last hour'},\n  {value: '86400', label: 'Last day'},\n  {value: '604800', label: 'Last week'},\n  {value: '2592000', label: 'Last month'},\n]\n\nexport { COLOR_MAP, UNITS, PARAMS, PARAMS_W_ALT, PRETTY_PARAMS, TIME_PARAMS };\n\n\n// export const URL = 'https://api.dat.eco/';\nexport const URL = 'http://localhost:8000/';\n\n"],"sourceRoot":""}